// Code generated by "apigen"; DO NOT EDIT.
//Service Profile
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using UnityEngine;

namespace Zeuz
{


public class ProfileUserCreateIn
{
	public string Login=""; //arg:"required" help:"user login name"
	public string Name=""; //arg:"" help:"unique display name"
	public string Desc=""; //arg:""
	public string PWHash=""; //arg:""
	public ProfileUserCreateIn(string _login="",string _name="",string _desc="",string _pwhash="") {Login=_login;Name=_name;Desc=_desc;PWHash=_pwhash;}
	public ProfileUserCreateIn(ProfileUserCreateIn _copy) { if (_copy == null) return;Login=_copy.Login;Name=_copy.Name;Desc=_copy.Desc;PWHash=_copy.PWHash;}
};

public class User : ItemCommon
{
	public string ID="";
	public string Login="";
	public string Name="";
	public string PWHash=""; //json:",omitempty"
	public string Desc="";
	public User(string _id="",string _login="",string _name="",string _pwhash="",string _desc="",ItemCommon _base=null) : base(_base) {ID=_id;Login=_login;Name=_name;PWHash=_pwhash;Desc=_desc;}
	public User(User _copy) { if (_copy == null) return;ID=_copy.ID;Login=_copy.Login;Name=_copy.Name;PWHash=_copy.PWHash;Desc=_copy.Desc;}
};

public class ProfileUserPwHashIn
{
	public string UserID=""; //arg:"required"
	public string PWHash=""; //arg:""
	public ProfileUserPwHashIn(string _userid="",string _pwhash="") {UserID=_userid;PWHash=_pwhash;}
	public ProfileUserPwHashIn(ProfileUserPwHashIn _copy) { if (_copy == null) return;UserID=_copy.UserID;PWHash=_copy.PWHash;}
};

public class ProfileUsersListIn
{
	public string Offset=""; //arg:"" help:"pagination start"
	public long Count=0; //arg:"" help:"pagination count"
	public ProfileUsersListIn(string _offset="",long _count=0) {Offset=_offset;Count=_count;}
	public ProfileUsersListIn(ProfileUsersListIn _copy) { if (_copy == null) return;Offset=_copy.Offset;Count=_copy.Count;}
};

public class ProfileUsersListOut
{
	public long Count=0; //arg:"" help:"pagination overall count"
	public List<string> UserIDs=new List<string>();
	public ProfileUsersListOut(long _count=0,List<string> _userids=null) {Count=_count;if(_userids!=null)UserIDs=_userids;}
	public ProfileUsersListOut(ProfileUsersListOut _copy) { if (_copy == null) return;Count=_copy.Count;if(_copy.UserIDs!=null)UserIDs=_copy.UserIDs;}
};

public class ProfileUserLookupIn
{
	public string Login=""; //arg:"" help:"user login name"
	public string Name=""; //arg:"" help:"unique display name"
	public ProfileUserLookupIn(string _login="",string _name="") {Login=_login;Name=_name;}
	public ProfileUserLookupIn(ProfileUserLookupIn _copy) { if (_copy == null) return;Login=_copy.Login;Name=_copy.Name;}
};

public class UserProfile
{
	public string ID="";
	public string Tags="";
	public Timestamp FirstLogin=new Timestamp();
	public Timestamp BanStart=new Timestamp();
	public Timestamp BanEnd=new Timestamp();
	public List<string> Comments=new List<string>();
	public Variant Data=new Variant();
	public List<string> LinkedAccounts=new List<string>();
	public List<string> Friends=new List<string>();
	public List<string> Blocked=new List<string>();
	public UserProfile(string _id="",string _tags="",Timestamp _firstlogin=new Timestamp(),Timestamp _banstart=new Timestamp(),Timestamp _banend=new Timestamp(),List<string> _comments=null,Variant _data=null,List<string> _linkedaccounts=null,List<string> _friends=null,List<string> _blocked=null) {ID=_id;Tags=_tags;FirstLogin=_firstlogin;BanStart=_banstart;BanEnd=_banend;if(_comments!=null)Comments=_comments;if(_data!=null)Data=_data;if(_linkedaccounts!=null)LinkedAccounts=_linkedaccounts;if(_friends!=null)Friends=_friends;if(_blocked!=null)Blocked=_blocked;}
	public UserProfile(UserProfile _copy) { if (_copy == null) return;ID=_copy.ID;Tags=_copy.Tags;FirstLogin=_copy.FirstLogin;BanStart=_copy.BanStart;BanEnd=_copy.BanEnd;if(_copy.Comments!=null)Comments=_copy.Comments;if(_copy.Data!=null)Data=_copy.Data;if(_copy.LinkedAccounts!=null)LinkedAccounts=_copy.LinkedAccounts;if(_copy.Friends!=null)Friends=_copy.Friends;if(_copy.Blocked!=null)Blocked=_copy.Blocked;}
};

public class InvItem : ItemCommon
{
	public string ID="";
	public string UserID="";
	public string Name="";
	public long Count=0;
	public InvItem(string _id="",string _userid="",string _name="",long _count=0,ItemCommon _base=null) : base(_base) {ID=_id;UserID=_userid;Name=_name;Count=_count;}
	public InvItem(InvItem _copy) { if (_copy == null) return;ID=_copy.ID;UserID=_copy.UserID;Name=_copy.Name;Count=_copy.Count;}
};

public class ProfileItemRemIn
{
	public string ItemID=""; //arg:"required"
	public long Count=0;
	public ProfileItemRemIn(string _itemid="",long _count=0) {ItemID=_itemid;Count=_count;}
	public ProfileItemRemIn(ProfileItemRemIn _copy) { if (_copy == null) return;ItemID=_copy.ItemID;Count=_copy.Count;}
};

public class ProfileItemRemByNameIn
{
	public string UserID="";
	public string Name=""; //arg:"required"
	public long Count=0;
	public ProfileItemRemByNameIn(string _userid="",string _name="",long _count=0) {UserID=_userid;Name=_name;Count=_count;}
	public ProfileItemRemByNameIn(ProfileItemRemByNameIn _copy) { if (_copy == null) return;UserID=_copy.UserID;Name=_copy.Name;Count=_copy.Count;}
};

public class ProfileItemNameCount
{
	public string Name=""; //jsonschema:"" help:"item name" arg:"required"
	public long Count=0; //jsonschema:"" help:"item count" arg:"required"
	public ProfileItemNameCount(string _name="",long _count=0) {Name=_name;Count=_count;}
	public ProfileItemNameCount(ProfileItemNameCount _copy) { if (_copy == null) return;Name=_copy.Name;Count=_copy.Count;}
};

public class ProfileItemAddIn : ProfileItemNameCount
{
	public string UserID="";
	public ProfileItemAddIn(string _userid="",ProfileItemNameCount _base=null) : base(_base) {UserID=_userid;}
	public ProfileItemAddIn(ProfileItemAddIn _copy) { if (_copy == null) return;UserID=_copy.UserID;}
};

public class ProfileItemUserName
{
	public string UserID="";
	public string Name=""; //arg:"required"
	public ProfileItemUserName(string _userid="",string _name="") {UserID=_userid;Name=_name;}
	public ProfileItemUserName(ProfileItemUserName _copy) { if (_copy == null) return;UserID=_copy.UserID;Name=_copy.Name;}
};

public class ProfileItemMove
{
	public string ID="";
	public long Count=0;
	public ProfileItemMove(string _id="",long _count=0) {ID=_id;Count=_count;}
	public ProfileItemMove(ProfileItemMove _copy) { if (_copy == null) return;ID=_copy.ID;Count=_copy.Count;}
};

public class ProfileItemTransferIn : ProfileItemMove
{
	public string UserIDTo="";
	public ProfileItemTransferIn(string _useridto="",ProfileItemMove _base=null) : base(_base) {UserIDTo=_useridto;}
	public ProfileItemTransferIn(ProfileItemTransferIn _copy) { if (_copy == null) return;UserIDTo=_copy.UserIDTo;}
};

public class ProfileItemBarterIn
{
	public string UserIDA="";
	public string UserIDB="";
	public List<ProfileItemMove> OfferA=new List<ProfileItemMove>();
	public List<ProfileItemMove> OfferB=new List<ProfileItemMove>();
	public ProfileItemBarterIn(string _userida="",string _useridb="",List<ProfileItemMove> _offera=null,List<ProfileItemMove> _offerb=null) {UserIDA=_userida;UserIDB=_useridb;if(_offera!=null)OfferA=_offera;if(_offerb!=null)OfferB=_offerb;}
	public ProfileItemBarterIn(ProfileItemBarterIn _copy) { if (_copy == null) return;UserIDA=_copy.UserIDA;UserIDB=_copy.UserIDB;if(_copy.OfferA!=null)OfferA=_copy.OfferA;if(_copy.OfferB!=null)OfferB=_copy.OfferB;}
};

public class ProfileItemClassConfig
{
	public string Name=""; //jsonschema:"" help:"class of item"
	public long CountMaxU=0; //jsonschema:"" help:"maximum number per user"
	public Timestamp LimitAddInterval=new Timestamp(); //jsonschema:"duration" json:",omitempty" help:"minimum gain interval per user"
	public Dictionary<string,string> Params=new Dictionary<string,string>(); //jsonschema:"" json:",omitempty" help:"parameters for profile_itemconfigget"
	public ProfileItemClassConfig(string _name="",long _countmaxu=0,Timestamp _limitaddinterval=new Timestamp(),Dictionary<string,string> _params=null) {Name=_name;CountMaxU=_countmaxu;LimitAddInterval=_limitaddinterval;if(_params!=null)Params=_params;}
	public ProfileItemClassConfig(ProfileItemClassConfig _copy) { if (_copy == null) return;Name=_copy.Name;CountMaxU=_copy.CountMaxU;LimitAddInterval=_copy.LimitAddInterval;if(_copy.Params!=null)Params=_copy.Params;}
};

public class ProfileItemConfig
{
	public string Name=""; //jsonschema:"" help:"unique name -> SKU"
	public string Class=""; //jsonschema:"" json:",omitempty" help:"class of item (can be empty)"
	public long CountMaxU=0; //jsonschema:"" help:"maximum number per user"
	public bool Stackable=false; //jsonschema:"" help:"item is stackable i.e. currencies"
	public Timestamp LimitAddInterval=new Timestamp(); //jsonschema:"duration" json:",omitempty" help:"minimum gain interval per user"
	public Dictionary<string,string> Params=new Dictionary<string,string>(); //jsonschema:"" json:",omitempty" help:"parameters for profile_itemconfigget"
	public List<ProfileItemNameCount> BuyPrice=new List<ProfileItemNameCount>(); //jsonschema:"" json:",omitempty" help:"price of item for profile_itembuy"
	public ProfileItemConfig(string _name="",string _class="",long _countmaxu=0,bool _stackable=false,Timestamp _limitaddinterval=new Timestamp(),Dictionary<string,string> _params=null,List<ProfileItemNameCount> _buyprice=null) {Name=_name;Class=_class;CountMaxU=_countmaxu;Stackable=_stackable;LimitAddInterval=_limitaddinterval;if(_params!=null)Params=_params;if(_buyprice!=null)BuyPrice=_buyprice;}
	public ProfileItemConfig(ProfileItemConfig _copy) { if (_copy == null) return;Name=_copy.Name;Class=_copy.Class;CountMaxU=_copy.CountMaxU;Stackable=_copy.Stackable;LimitAddInterval=_copy.LimitAddInterval;if(_copy.Params!=null)Params=_copy.Params;if(_copy.BuyPrice!=null)BuyPrice=_copy.BuyPrice;}
};

public class ProfileItemConfigGetOut
{
	public List<ProfileItemClassConfig> Classes=new List<ProfileItemClassConfig>();
	public List<ProfileItemConfig> Items=new List<ProfileItemConfig>();
	public ProfileItemConfigGetOut(List<ProfileItemClassConfig> _classes=null,List<ProfileItemConfig> _items=null) {if(_classes!=null)Classes=_classes;if(_items!=null)Items=_items;}
	public ProfileItemConfigGetOut(ProfileItemConfigGetOut _copy) { if (_copy == null) return;if(_copy.Classes!=null)Classes=_copy.Classes;if(_copy.Items!=null)Items=_copy.Items;}
};


public class ApiProfile
{ 
	public delegate void UsercreateDelegate(string result, string error);
    public class UsercreateRequest {  public string Result="";public string Error=""; public Request rq;
        public void Start(UsercreateDelegate del = null, MonoBehaviour co = null) {Client.StartCo(co,Run(del));}
        public IEnumerator Run(UsercreateDelegate del = null) { yield return rq.Send(); UsercreateDone(this); del?.Invoke(Result, Error); }
    }

    public static UsercreateRequest Usercreate(ProfileUserCreateIn input, Context ctx=null)
    {
        if (ctx == null) ctx = Context.Def;
        UsercreateRequest rq=new UsercreateRequest();
        rq.rq = Client.CreateRequest(ctx, "profile_usercreate", input);
        return rq;
    }

    public static void UsercreateDone(UsercreateRequest rq)
    {
        rq.Error = rq.rq.Error;
        JSONObject rd = rq.rq.ResponseData as JSONObject;
        if (rd != null)
        {
            rq.Result = (string)rd.ToObject("");
        }
    }


	public delegate void UserdeleteDelegate(string error);
    public class UserdeleteRequest { public string Error=""; public Request rq;
        public void Start(UserdeleteDelegate del = null, MonoBehaviour co = null) {Client.StartCo(co,Run(del));}
        public IEnumerator Run(UserdeleteDelegate del = null) { yield return rq.Send(); UserdeleteDone(this); del?.Invoke(Error); }
    }

    public static UserdeleteRequest Userdelete(string input, Context ctx=null)
    {
        if (ctx == null) ctx = Context.Def;
        UserdeleteRequest rq=new UserdeleteRequest();
        rq.rq = Client.CreateRequest(ctx, "profile_userdelete", input);
        return rq;
    }

    public static void UserdeleteDone(UserdeleteRequest rq)
    {
        rq.Error = rq.rq.Error;
    }


	public delegate void UsergetinternalDelegate(User result, string error);
    public class UsergetinternalRequest {  public User Result=new User();public string Error=""; public Request rq;
        public void Start(UsergetinternalDelegate del = null, MonoBehaviour co = null) {Client.StartCo(co,Run(del));}
        public IEnumerator Run(UsergetinternalDelegate del = null) { yield return rq.Send(); UsergetinternalDone(this); del?.Invoke(Result, Error); }
    }

    public static UsergetinternalRequest Usergetinternal(string input, Context ctx=null)
    {
        if (ctx == null) ctx = Context.Def;
        UsergetinternalRequest rq=new UsergetinternalRequest();
        rq.rq = Client.CreateRequest(ctx, "profile_usergetinternal", input);
        return rq;
    }

    public static void UsergetinternalDone(UsergetinternalRequest rq)
    {
        rq.Error = rq.rq.Error;
        JSONObject rd = rq.rq.ResponseData as JSONObject;
        if (rd != null)
        {
            rq.Result = (User)rd.ToObject(new User());
        }
    }


	public delegate void UsersetpwhashDelegate(string error);
    public class UsersetpwhashRequest { public string Error=""; public Request rq;
        public void Start(UsersetpwhashDelegate del = null, MonoBehaviour co = null) {Client.StartCo(co,Run(del));}
        public IEnumerator Run(UsersetpwhashDelegate del = null) { yield return rq.Send(); UsersetpwhashDone(this); del?.Invoke(Error); }
    }

    public static UsersetpwhashRequest Usersetpwhash(ProfileUserPwHashIn input, Context ctx=null)
    {
        if (ctx == null) ctx = Context.Def;
        UsersetpwhashRequest rq=new UsersetpwhashRequest();
        rq.rq = Client.CreateRequest(ctx, "profile_usersetpwhash", input);
        return rq;
    }

    public static void UsersetpwhashDone(UsersetpwhashRequest rq)
    {
        rq.Error = rq.rq.Error;
    }


	public delegate void UsersetDelegate(string error);
    public class UsersetRequest { public string Error=""; public Request rq;
        public void Start(UsersetDelegate del = null, MonoBehaviour co = null) {Client.StartCo(co,Run(del));}
        public IEnumerator Run(UsersetDelegate del = null) { yield return rq.Send(); UsersetDone(this); del?.Invoke(Error); }
    }

    public static UsersetRequest Userset(User input, Context ctx=null)
    {
        if (ctx == null) ctx = Context.Def;
        UsersetRequest rq=new UsersetRequest();
        rq.rq = Client.CreateRequest(ctx, "profile_userset", input);
        return rq;
    }

    public static void UsersetDone(UsersetRequest rq)
    {
        rq.Error = rq.rq.Error;
    }


	public delegate void UsergetDelegate(User result, string error);
    public class UsergetRequest {  public User Result=new User();public string Error=""; public Request rq;
        public void Start(UsergetDelegate del = null, MonoBehaviour co = null) {Client.StartCo(co,Run(del));}
        public IEnumerator Run(UsergetDelegate del = null) { yield return rq.Send(); UsergetDone(this); del?.Invoke(Result, Error); }
    }

    public static UsergetRequest Userget(string input, Context ctx=null)
    {
        if (ctx == null) ctx = Context.Def;
        UsergetRequest rq=new UsergetRequest();
        rq.rq = Client.CreateRequest(ctx, "profile_userget", input);
        return rq;
    }

    public static void UsergetDone(UsergetRequest rq)
    {
        rq.Error = rq.rq.Error;
        JSONObject rd = rq.rq.ResponseData as JSONObject;
        if (rd != null)
        {
            rq.Result = (User)rd.ToObject(new User());
        }
    }


	public delegate void UsersgetDelegate(List<User> result, string error);
    public class UsersgetRequest {  public List<User> Result=new List<User>();public string Error=""; public Request rq;
        public void Start(UsersgetDelegate del = null, MonoBehaviour co = null) {Client.StartCo(co,Run(del));}
        public IEnumerator Run(UsersgetDelegate del = null) { yield return rq.Send(); UsersgetDone(this); del?.Invoke(Result, Error); }
    }

    public static UsersgetRequest Usersget(List<string> input, Context ctx=null)
    {
        if (ctx == null) ctx = Context.Def;
        UsersgetRequest rq=new UsersgetRequest();
        rq.rq = Client.CreateRequest(ctx, "profile_usersget", input);
        return rq;
    }

    public static void UsersgetDone(UsersgetRequest rq)
    {
        rq.Error = rq.rq.Error;
        JSONObject rd = rq.rq.ResponseData as JSONObject;
        if (rd != null)
        {
            rq.Result = (List<User>)rd.ToObject(new List<User>());
        }
    }


	public delegate void UserslistDelegate(ProfileUsersListOut result, string error);
    public class UserslistRequest {  public ProfileUsersListOut Result=new ProfileUsersListOut();public string Error=""; public Request rq;
        public void Start(UserslistDelegate del = null, MonoBehaviour co = null) {Client.StartCo(co,Run(del));}
        public IEnumerator Run(UserslistDelegate del = null) { yield return rq.Send(); UserslistDone(this); del?.Invoke(Result, Error); }
    }

    public static UserslistRequest Userslist(ProfileUsersListIn input, Context ctx=null)
    {
        if (ctx == null) ctx = Context.Def;
        UserslistRequest rq=new UserslistRequest();
        rq.rq = Client.CreateRequest(ctx, "profile_userslist", input);
        return rq;
    }

    public static void UserslistDone(UserslistRequest rq)
    {
        rq.Error = rq.rq.Error;
        JSONObject rd = rq.rq.ResponseData as JSONObject;
        if (rd != null)
        {
            rq.Result = (ProfileUsersListOut)rd.ToObject(new ProfileUsersListOut());
        }
    }


	public delegate void UserlookupDelegate(string result, string error);
    public class UserlookupRequest {  public string Result="";public string Error=""; public Request rq;
        public void Start(UserlookupDelegate del = null, MonoBehaviour co = null) {Client.StartCo(co,Run(del));}
        public IEnumerator Run(UserlookupDelegate del = null) { yield return rq.Send(); UserlookupDone(this); del?.Invoke(Result, Error); }
    }

    public static UserlookupRequest Userlookup(ProfileUserLookupIn input, Context ctx=null)
    {
        if (ctx == null) ctx = Context.Def;
        UserlookupRequest rq=new UserlookupRequest();
        rq.rq = Client.CreateRequest(ctx, "profile_userlookup", input);
        return rq;
    }

    public static void UserlookupDone(UserlookupRequest rq)
    {
        rq.Error = rq.rq.Error;
        JSONObject rd = rq.rq.ResponseData as JSONObject;
        if (rd != null)
        {
            rq.Result = (string)rd.ToObject("");
        }
    }


	public delegate void UserslookupDelegate(List<string> result, string error);
    public class UserslookupRequest {  public List<string> Result=new List<string>();public string Error=""; public Request rq;
        public void Start(UserslookupDelegate del = null, MonoBehaviour co = null) {Client.StartCo(co,Run(del));}
        public IEnumerator Run(UserslookupDelegate del = null) { yield return rq.Send(); UserslookupDone(this); del?.Invoke(Result, Error); }
    }

    public static UserslookupRequest Userslookup(List<ProfileUserLookupIn> input, Context ctx=null)
    {
        if (ctx == null) ctx = Context.Def;
        UserslookupRequest rq=new UserslookupRequest();
        rq.rq = Client.CreateRequest(ctx, "profile_userslookup", input);
        return rq;
    }

    public static void UserslookupDone(UserslookupRequest rq)
    {
        rq.Error = rq.rq.Error;
        JSONObject rd = rq.rq.ResponseData as JSONObject;
        if (rd != null)
        {
            rq.Result = (List<string>)rd.ToObject(new List<string>());
        }
    }


	public delegate void ProfilegetDelegate(UserProfile result, string error);
    public class ProfilegetRequest {  public UserProfile Result=new UserProfile();public string Error=""; public Request rq;
        public void Start(ProfilegetDelegate del = null, MonoBehaviour co = null) {Client.StartCo(co,Run(del));}
        public IEnumerator Run(ProfilegetDelegate del = null) { yield return rq.Send(); ProfilegetDone(this); del?.Invoke(Result, Error); }
    }

    public static ProfilegetRequest Profileget(string input, Context ctx=null)
    {
        if (ctx == null) ctx = Context.Def;
        ProfilegetRequest rq=new ProfilegetRequest();
        rq.rq = Client.CreateRequest(ctx, "profile_profileget", input);
        return rq;
    }

    public static void ProfilegetDone(ProfilegetRequest rq)
    {
        rq.Error = rq.rq.Error;
        JSONObject rd = rq.rq.ResponseData as JSONObject;
        if (rd != null)
        {
            rq.Result = (UserProfile)rd.ToObject(new UserProfile());
        }
    }


	public delegate void ProfilesgetDelegate(List<UserProfile> result, string error);
    public class ProfilesgetRequest {  public List<UserProfile> Result=new List<UserProfile>();public string Error=""; public Request rq;
        public void Start(ProfilesgetDelegate del = null, MonoBehaviour co = null) {Client.StartCo(co,Run(del));}
        public IEnumerator Run(ProfilesgetDelegate del = null) { yield return rq.Send(); ProfilesgetDone(this); del?.Invoke(Result, Error); }
    }

    public static ProfilesgetRequest Profilesget(List<string> input, Context ctx=null)
    {
        if (ctx == null) ctx = Context.Def;
        ProfilesgetRequest rq=new ProfilesgetRequest();
        rq.rq = Client.CreateRequest(ctx, "profile_profilesget", input);
        return rq;
    }

    public static void ProfilesgetDone(ProfilesgetRequest rq)
    {
        rq.Error = rq.rq.Error;
        JSONObject rd = rq.rq.ResponseData as JSONObject;
        if (rd != null)
        {
            rq.Result = (List<UserProfile>)rd.ToObject(new List<UserProfile>());
        }
    }


	public delegate void ProfilesetDelegate(string error);
    public class ProfilesetRequest { public string Error=""; public Request rq;
        public void Start(ProfilesetDelegate del = null, MonoBehaviour co = null) {Client.StartCo(co,Run(del));}
        public IEnumerator Run(ProfilesetDelegate del = null) { yield return rq.Send(); ProfilesetDone(this); del?.Invoke(Error); }
    }

    public static ProfilesetRequest Profileset(UserProfile input, Context ctx=null)
    {
        if (ctx == null) ctx = Context.Def;
        ProfilesetRequest rq=new ProfilesetRequest();
        rq.rq = Client.CreateRequest(ctx, "profile_profileset", input);
        return rq;
    }

    public static void ProfilesetDone(ProfilesetRequest rq)
    {
        rq.Error = rq.rq.Error;
    }


	public delegate void ProfiledeleteDelegate(string error);
    public class ProfiledeleteRequest { public string Error=""; public Request rq;
        public void Start(ProfiledeleteDelegate del = null, MonoBehaviour co = null) {Client.StartCo(co,Run(del));}
        public IEnumerator Run(ProfiledeleteDelegate del = null) { yield return rq.Send(); ProfiledeleteDone(this); del?.Invoke(Error); }
    }

    public static ProfiledeleteRequest Profiledelete(string input, Context ctx=null)
    {
        if (ctx == null) ctx = Context.Def;
        ProfiledeleteRequest rq=new ProfiledeleteRequest();
        rq.rq = Client.CreateRequest(ctx, "profile_profiledelete", input);
        return rq;
    }

    public static void ProfiledeleteDone(ProfiledeleteRequest rq)
    {
        rq.Error = rq.rq.Error;
    }


	public delegate void ItemlistDelegate(List<InvItem> result, string error);
    public class ItemlistRequest {  public List<InvItem> Result=new List<InvItem>();public string Error=""; public Request rq;
        public void Start(ItemlistDelegate del = null, MonoBehaviour co = null) {Client.StartCo(co,Run(del));}
        public IEnumerator Run(ItemlistDelegate del = null) { yield return rq.Send(); ItemlistDone(this); del?.Invoke(Result, Error); }
    }

    public static ItemlistRequest Itemlist(string input, Context ctx=null)
    {
        if (ctx == null) ctx = Context.Def;
        ItemlistRequest rq=new ItemlistRequest();
        rq.rq = Client.CreateRequest(ctx, "profile_itemlist", input);
        return rq;
    }

    public static void ItemlistDone(ItemlistRequest rq)
    {
        rq.Error = rq.rq.Error;
        JSONObject rd = rq.rq.ResponseData as JSONObject;
        if (rd != null)
        {
            rq.Result = (List<InvItem>)rd.ToObject(new List<InvItem>());
        }
    }


	public delegate void ItemremDelegate(string error);
    public class ItemremRequest { public string Error=""; public Request rq;
        public void Start(ItemremDelegate del = null, MonoBehaviour co = null) {Client.StartCo(co,Run(del));}
        public IEnumerator Run(ItemremDelegate del = null) { yield return rq.Send(); ItemremDone(this); del?.Invoke(Error); }
    }

    public static ItemremRequest Itemrem(ProfileItemRemIn input, Context ctx=null)
    {
        if (ctx == null) ctx = Context.Def;
        ItemremRequest rq=new ItemremRequest();
        rq.rq = Client.CreateRequest(ctx, "profile_itemrem", input);
        return rq;
    }

    public static void ItemremDone(ItemremRequest rq)
    {
        rq.Error = rq.rq.Error;
    }


	public delegate void ItemrembynameDelegate(string result, string error);
    public class ItemrembynameRequest {  public string Result="";public string Error=""; public Request rq;
        public void Start(ItemrembynameDelegate del = null, MonoBehaviour co = null) {Client.StartCo(co,Run(del));}
        public IEnumerator Run(ItemrembynameDelegate del = null) { yield return rq.Send(); ItemrembynameDone(this); del?.Invoke(Result, Error); }
    }

    public static ItemrembynameRequest Itemrembyname(ProfileItemRemByNameIn input, Context ctx=null)
    {
        if (ctx == null) ctx = Context.Def;
        ItemrembynameRequest rq=new ItemrembynameRequest();
        rq.rq = Client.CreateRequest(ctx, "profile_itemrembyname", input);
        return rq;
    }

    public static void ItemrembynameDone(ItemrembynameRequest rq)
    {
        rq.Error = rq.rq.Error;
        JSONObject rd = rq.rq.ResponseData as JSONObject;
        if (rd != null)
        {
            rq.Result = (string)rd.ToObject("");
        }
    }


	public delegate void ItemaddDelegate(string result, string error);
    public class ItemaddRequest {  public string Result="";public string Error=""; public Request rq;
        public void Start(ItemaddDelegate del = null, MonoBehaviour co = null) {Client.StartCo(co,Run(del));}
        public IEnumerator Run(ItemaddDelegate del = null) { yield return rq.Send(); ItemaddDone(this); del?.Invoke(Result, Error); }
    }

    public static ItemaddRequest Itemadd(ProfileItemAddIn input, Context ctx=null)
    {
        if (ctx == null) ctx = Context.Def;
        ItemaddRequest rq=new ItemaddRequest();
        rq.rq = Client.CreateRequest(ctx, "profile_itemadd", input);
        return rq;
    }

    public static void ItemaddDone(ItemaddRequest rq)
    {
        rq.Error = rq.rq.Error;
        JSONObject rd = rq.rq.ResponseData as JSONObject;
        if (rd != null)
        {
            rq.Result = (string)rd.ToObject("");
        }
    }


	public delegate void ItemcreateDelegate(string result, string error);
    public class ItemcreateRequest {  public string Result="";public string Error=""; public Request rq;
        public void Start(ItemcreateDelegate del = null, MonoBehaviour co = null) {Client.StartCo(co,Run(del));}
        public IEnumerator Run(ItemcreateDelegate del = null) { yield return rq.Send(); ItemcreateDone(this); del?.Invoke(Result, Error); }
    }

    public static ItemcreateRequest Itemcreate(InvItem input, Context ctx=null)
    {
        if (ctx == null) ctx = Context.Def;
        ItemcreateRequest rq=new ItemcreateRequest();
        rq.rq = Client.CreateRequest(ctx, "profile_itemcreate", input);
        return rq;
    }

    public static void ItemcreateDone(ItemcreateRequest rq)
    {
        rq.Error = rq.rq.Error;
        JSONObject rd = rq.rq.ResponseData as JSONObject;
        if (rd != null)
        {
            rq.Result = (string)rd.ToObject("");
        }
    }


	public delegate void ItemsetDelegate(string error);
    public class ItemsetRequest { public string Error=""; public Request rq;
        public void Start(ItemsetDelegate del = null, MonoBehaviour co = null) {Client.StartCo(co,Run(del));}
        public IEnumerator Run(ItemsetDelegate del = null) { yield return rq.Send(); ItemsetDone(this); del?.Invoke(Error); }
    }

    public static ItemsetRequest Itemset(InvItem input, Context ctx=null)
    {
        if (ctx == null) ctx = Context.Def;
        ItemsetRequest rq=new ItemsetRequest();
        rq.rq = Client.CreateRequest(ctx, "profile_itemset", input);
        return rq;
    }

    public static void ItemsetDone(ItemsetRequest rq)
    {
        rq.Error = rq.rq.Error;
    }


	public delegate void ItemgetDelegate(InvItem result, string error);
    public class ItemgetRequest {  public InvItem Result=new InvItem();public string Error=""; public Request rq;
        public void Start(ItemgetDelegate del = null, MonoBehaviour co = null) {Client.StartCo(co,Run(del));}
        public IEnumerator Run(ItemgetDelegate del = null) { yield return rq.Send(); ItemgetDone(this); del?.Invoke(Result, Error); }
    }

    public static ItemgetRequest Itemget(string input, Context ctx=null)
    {
        if (ctx == null) ctx = Context.Def;
        ItemgetRequest rq=new ItemgetRequest();
        rq.rq = Client.CreateRequest(ctx, "profile_itemget", input);
        return rq;
    }

    public static void ItemgetDone(ItemgetRequest rq)
    {
        rq.Error = rq.rq.Error;
        JSONObject rd = rq.rq.ResponseData as JSONObject;
        if (rd != null)
        {
            rq.Result = (InvItem)rd.ToObject(new InvItem());
        }
    }


	public delegate void ItemgetbynameDelegate(InvItem result, string error);
    public class ItemgetbynameRequest {  public InvItem Result=new InvItem();public string Error=""; public Request rq;
        public void Start(ItemgetbynameDelegate del = null, MonoBehaviour co = null) {Client.StartCo(co,Run(del));}
        public IEnumerator Run(ItemgetbynameDelegate del = null) { yield return rq.Send(); ItemgetbynameDone(this); del?.Invoke(Result, Error); }
    }

    public static ItemgetbynameRequest Itemgetbyname(ProfileItemUserName input, Context ctx=null)
    {
        if (ctx == null) ctx = Context.Def;
        ItemgetbynameRequest rq=new ItemgetbynameRequest();
        rq.rq = Client.CreateRequest(ctx, "profile_itemgetbyname", input);
        return rq;
    }

    public static void ItemgetbynameDone(ItemgetbynameRequest rq)
    {
        rq.Error = rq.rq.Error;
        JSONObject rd = rq.rq.ResponseData as JSONObject;
        if (rd != null)
        {
            rq.Result = (InvItem)rd.ToObject(new InvItem());
        }
    }


	public delegate void ItemtransferDelegate(string error);
    public class ItemtransferRequest { public string Error=""; public Request rq;
        public void Start(ItemtransferDelegate del = null, MonoBehaviour co = null) {Client.StartCo(co,Run(del));}
        public IEnumerator Run(ItemtransferDelegate del = null) { yield return rq.Send(); ItemtransferDone(this); del?.Invoke(Error); }
    }

    public static ItemtransferRequest Itemtransfer(ProfileItemTransferIn input, Context ctx=null)
    {
        if (ctx == null) ctx = Context.Def;
        ItemtransferRequest rq=new ItemtransferRequest();
        rq.rq = Client.CreateRequest(ctx, "profile_itemtransfer", input);
        return rq;
    }

    public static void ItemtransferDone(ItemtransferRequest rq)
    {
        rq.Error = rq.rq.Error;
    }


	public delegate void ItembarterDelegate(string error);
    public class ItembarterRequest { public string Error=""; public Request rq;
        public void Start(ItembarterDelegate del = null, MonoBehaviour co = null) {Client.StartCo(co,Run(del));}
        public IEnumerator Run(ItembarterDelegate del = null) { yield return rq.Send(); ItembarterDone(this); del?.Invoke(Error); }
    }

    public static ItembarterRequest Itembarter(ProfileItemBarterIn input, Context ctx=null)
    {
        if (ctx == null) ctx = Context.Def;
        ItembarterRequest rq=new ItembarterRequest();
        rq.rq = Client.CreateRequest(ctx, "profile_itembarter", input);
        return rq;
    }

    public static void ItembarterDone(ItembarterRequest rq)
    {
        rq.Error = rq.rq.Error;
    }


	public delegate void ItemconfiggetDelegate(ProfileItemConfigGetOut result, string error);
    public class ItemconfiggetRequest {  public ProfileItemConfigGetOut Result=new ProfileItemConfigGetOut();public string Error=""; public Request rq;
        public void Start(ItemconfiggetDelegate del = null, MonoBehaviour co = null) {Client.StartCo(co,Run(del));}
        public IEnumerator Run(ItemconfiggetDelegate del = null) { yield return rq.Send(); ItemconfiggetDone(this); del?.Invoke(Result, Error); }
    }

    public static ItemconfiggetRequest Itemconfigget( Context ctx=null)
    {
        if (ctx == null) ctx = Context.Def;
        ItemconfiggetRequest rq=new ItemconfiggetRequest();
        rq.rq = Client.CreateRequest(ctx, "profile_itemconfigget", null);
        return rq;
    }

    public static void ItemconfiggetDone(ItemconfiggetRequest rq)
    {
        rq.Error = rq.rq.Error;
        JSONObject rd = rq.rq.ResponseData as JSONObject;
        if (rd != null)
        {
            rq.Result = (ProfileItemConfigGetOut)rd.ToObject(new ProfileItemConfigGetOut());
        }
    }


	public delegate void ItembuyDelegate(string result, string error);
    public class ItembuyRequest {  public string Result="";public string Error=""; public Request rq;
        public void Start(ItembuyDelegate del = null, MonoBehaviour co = null) {Client.StartCo(co,Run(del));}
        public IEnumerator Run(ItembuyDelegate del = null) { yield return rq.Send(); ItembuyDone(this); del?.Invoke(Result, Error); }
    }

    public static ItembuyRequest Itembuy(ProfileItemAddIn input, Context ctx=null)
    {
        if (ctx == null) ctx = Context.Def;
        ItembuyRequest rq=new ItembuyRequest();
        rq.rq = Client.CreateRequest(ctx, "profile_itembuy", input);
        return rq;
    }

    public static void ItembuyDone(ItembuyRequest rq)
    {
        rq.Error = rq.rq.Error;
        JSONObject rd = rq.rq.ResponseData as JSONObject;
        if (rd != null)
        {
            rq.Result = (string)rd.ToObject("");
        }
    }


}

} //namespace Zeuz
